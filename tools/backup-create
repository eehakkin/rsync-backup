#! /bin/sh -Ceu
# backup-create - create a new backup directory
###########################################################################
# backup-create 0.0.20220904
#
# Copyright (C) 2010 - 2022 Eero Häkkinen <Eero+rsync-backup@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
# Try to be nice.
{
	ionice -c 3  -p "${$}"
	renice -n 99 -p "${$}"
} > /dev/null 2>&1 || :

# Locate the script.
me=$( command -v -- "${0}" || ls -d -- "${0}" )
me_base=$( basename -- "${me}" )
me_dir=$( dirname -- "${me}" )
case ${me_dir} in
.  ) dir=.. ;;
.. ) dir=../.. ;;
*. ) dir=$( cd -- "${me_dir}/.." && pwd ) ;;
*  ) dir=$( dirname -- "${me_dir}" ) ;;
esac

valid='[:alnum:]_.-'


# Parse options.
while :
do
	case ${1-} in
	--help | -h )
		COLUMNS=${COLUMNS:-$( tput cols 2> /dev/null || : )}
		exec fmt -s ${COLUMNS:+ -w "${COLUMNS}" } << __HELP__ \
		| exec sed -e '/\\$/{N;s/\\\n  *//;}'; exit
Usage: \\
           ${me_base} [<RSYNC-OPTION>]... <SRC>...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... <BASE-DIR>/./[<SRC>]...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... [<USER>@]<HOST>:<SRC>...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... [<USER>@]<HOST>:<BASE-DIR>/./[<SRC>]...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... [<USER>@]<HOST>::<MODULE>[/[<SRC>]]...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... [<USER>@]<HOST>::<MODULE>/<BASE-DIR>/./[<SRC>]...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>[/[<SRC>]]...
 or:   \\
           ${me_base} [<RSYNC-OPTION>]... rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>/<BASE-DIR>/./[<SRC>]...
 or:   \\
           ${me_base} <OPTION>...

Create a new backup directory \
using ${me_base%backup*}backup-create-rsync(1) and thus rsync(1).

The newly created backup directory \
is named according to the backup date and time and \
is a full backup directory \
containing direct (but possible filtered) copies \
of original files and directories. \
It can thus be accessed and restored directly.

A new backup directory is created using the following steps:

  An empty backup directory is created in a temporary directory.

  Files and directories are copied \
from sources \
to the newly created backup directory \
using ${me_base%backup*}backup-create-rsync(1) and thus rsync(1).

  A new symbolink link to denote the latest backup directory \
is created in a temporary directory.

  The newly created backup directory and \
the newly created symbolink link \
are moved to the final location.

Disk usage is minimised and \
the transfer is speeded up \
by hard linking files \
from old backup directories \
to the newly created backup directory \
whenever possible \
(when files in sources and previous backup directories are identical \
in content and in all preserved attributes) and \
by sharing physical storage between files (reflinking) \
on supported filesystems (btrfs, s3ql and xfs).

Options:
    -h, --help[=<FORMAT>]
        Show this help message and exit.
    -V, --version
        Show version information and exit.

Rsync options:
$( exec rsync --help | exec sed '
	/^ *-/,/^$/!d
	/^ *--help/d
	/^ *--version/d
	/./!d
	s/^ */        /
	s/,-/, -/g
	/^ *-/{
		s//    -/
		s/\([^, ]\)  */'"\1\\
        "'/
	}
' )

Operands:
    <SRC>
        A local source to be copied to a newly created backup directory.
    <BASE-DIR>/./[<SRC>]
        A local source to be copied to a newly created backup directory without the base directory.
    [<USER>@]<HOST>:<SRC>
        A remote shell source to be copied to a newly created backup directory.
    [<USER>@]<HOST>:<BASE-DIR>/./[<SRC>]
        A remote shell source to be copied to a newly created backup directory without the base directory.
    [<USER>@]<HOST>::<MODULE>[/[<SRC>]]
        An rsync daemon source to be copied to a newly created backup directory.
    [<USER>@]<HOST>::<MODULE>/<BASE-DIR>/./[<SRC>]
        An rsync daemon source to be copied to a newly created backup directory without the base directory.
    rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>[/[<SRC>]]
        An rsync daemon source to be copied to a newly created backup directory.
    rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>/<BASE-DIR>/./[<SRC>]
        An rsync daemon source to be copied to a newly created backup directory without the base directory.

Files:
    ${dir}/<YEAR>
        A yearly backup directory.
    ${dir}/<YEAR>[-]<MONTH>
        A monthly backup directory.
    ${dir}/<YEAR>[-]W<WEEK>
        A weekly backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>
        A daily backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>
        A daily backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>T<HOUR>
        An hourly backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>
        An hourly backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>T<HOUR>[:]<MINUTE>
        A minutely backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>[:]<MINUTE>
        A minutely backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>T<HOUR>[:]<MINUTE>[:]<SECOND>
        A secondly backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>[:]<MINUTE>[:]<SECOND>
        A secondly backup directory.
    ${dir}/latest
        A symbolic link to the latest backup directory.
    ${dir}/conf/create-config
        An optional configuration file \
used by ${me_base%backup*}backup-create-rsync(1) \
containing long option names (without leading slashes) and \
optional option arguments \
to be passed to rsync(1) \
when creating a new backup directory.
    ${dir}/conf/create-config.d
        An optional directory \
used by ${me_base%backup*}backup-create-rsync(1) \
containing configuration files \
similar to the ${dir}/conf/create-config configuration file \
containing long option names (without leading slashes) and \
optional option arguments \
to be passed to rsync(1) \
when creating a new backup directory. \
The names of the files must consist of only characters \
matching the pattern [${valid}].
    ${dir}/conf/rsh
        An optional script \
to be used as a remote shell instead of the plain ssh(1). \
This script can be used for setting identity files and proxy commands, \
for instance.
    ${dir}/conf/rsync-config
        An optional configuration file \
used by ${me_base%backup*}backup-rsync(1) \
used by ${me_base%backup*}backup-copy-rsync(1) and ${me_base%backup*}backup-create-rsync(1) \
used by ${me_base%backup*}backup-copy(1) and ${me_base}(1) \
containing long option names (without leading slashes) and \
optional option arguments \
to be passed to rsync(1).
    ${dir}/conf/rsync-config.d
        An optional directory \
used by ${me_base%backup*}backup-rsync(1) \
used by ${me_base%backup*}backup-copy-rsync(1) and ${me_base%backup*}backup-create-rsync(1) \
used by ${me_base%backup*}backup-copy(1) and ${me_base}(1) \
containing configuration files \
similar to the ${dir}/conf/rsync-config configuration file \
containing long option names (without leading slashes) and \
optional option arguments \
to be passed to rsync(1). \
The names of the files must consist of only characters \
matching the pattern [${valid}].
    ${dir}/conf/tag-formats
        An optional configuration file \
containing date formats \
to be used \
when constructing a backup directory name for a new backup. \
Empty lines and comment lines (starting with a "#") are allowed, too. \
Each date format is tried in turn in order specified \
until a non-existing backup directory is found.
    ${dir}/tmp/
        A temporary directory to be used for creating a new backup directory.
    ${dir}/tools/${me_base%backup*}backup-create-rsync
        Used for copying files using rsync(1).
    <SOURCE-DIRECTORY>/.backup-filter
        An optional per-directory rsync(1) filter merge-file \
which can be used for excluding files from backups. \
Empty lines and comment lines (starting with a "#") are allowed, too.

See also:
    ${me_base%backup*}backup-clean-tmp(1),
    ${me_base%backup*}backup-create-rsync(1),
    ${me_base%backup*}backup-help(1),
    ${me_base%backup*}backup-make-tag(1),
    ${me_base%backup*}backup-sources(1)

    rsync(1),
    ssh(1)

    Home page <https://github.Eero.Häkkinen.fi/rsync-backup/>
__HELP__
		;;
	--help=* | --version | -V )
		export BACKUP_TOOL="${0}"
		exec "${0%backup*}backup-help" "${1}"
		;;
	esac
	break
done

# Construct a tag name.
tag=$( "${0%backup*}backup-make-tag" )

# Create a protected temporary directory,
# create a new backup directory in the protected temporary directory,
# release the newly created backup directory and
# remove the protected temporary directory.
exec "${0%backup*}backup-create-rsync" "${@}" "${dir}/tmp/create-${$}/${tag}"
