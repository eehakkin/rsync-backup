#! /bin/sh -Ceu
###########################################################################
# backup-create-rsync 0.0.20211113
#
# Copyright (C) 2010-2021 Eero Häkkinen <Eero+rsync-backup@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
# Try to be nice.
{
	ionice -c 3  -p "${$}"
	renice -n 99 -p "${$}"
} > /dev/null 2>&1 || :

# Locate the script.
me=$( command -v -- "${0}" || ls -d -- "${0}" )
me_dir=$( dirname -- "${me}" )
case ${me_dir} in
.  ) dir=.. ;;
.. ) dir=../.. ;;
*. ) dir=$( cd -- "${me_dir}/.." && pwd ) ;;
*  ) dir=$( dirname -- "${me_dir}" ) ;;
esac

basename=${0##*[\\/]}
short_description='a backup creation oriented file-copying tool'



# Parse options.
while :
do
	case ${1-} in
	--help | -h )
		COLUMNS=${COLUMNS:-$( tput cols 2> /dev/null || : )}
		exec fmt -s ${COLUMNS:+ -w "${COLUMNS}" } << __HELP__ \
		| exec sed -e '/\\$/{N;s/\\\n  *//;}'; exit
Usage: \\
           ${basename} [<RSYNC-OPTION>]... <SRC>... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... <BASE-DIR>/./[<SRC>]... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... [<USER>@]<HOST>:<SRC>... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... [<USER>@]<HOST>:<BASE-DIR>/./[<SRC>]... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... [<USER>@]<HOST>::<MODULE>[/[<SRC>]]... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... [<USER>@]<HOST>::<MODULE>/<BASE-DIR>/./[<SRC>]... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>[/[<SRC>]]... [<DEST>]
 or:   \\
           ${basename} [<RSYNC-OPTION>]... rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>/<BASE-DIR>/./[<SRC>]... [<DEST>]
 or:   \\
           ${basename} <OPTION>...

Copy files \
using ${basename%backup*}backup-rsync(1) and thus rsync(1) \
with backup creation related options.

Options:
    -h, --help[=<FORMAT>]
        Show this help message and exit.
    -V, --version
        Show version information and exit.

Rsync options:
$( exec rsync --help | exec sed '
	/^ *-/,/^$/!d
	/^ *--help/d
	/^ *--version/d
	/./!d
	s/^ */        /
	s/,-/, -/g
	/^ *-/{
		s//    -/
		s/\([^, ]\)  */\1\
        /
	}
' )

Operands:
    <SRC>
        A local source to be copied.
    <BASE-DIR>/./[<SRC>]
        A local source to be copied without the base directory.
    [<USER>@]<HOST>:<SRC>
        A remote shell source to be copied.
    [<USER>@]<HOST>:<BASE-DIR>/./[<SRC>]
        A remote shell source to be copied without the base directory.
    [<USER>@]<HOST>::<MODULE>[/[<SRC>]]
        An rsync daemon source to be copied.
    [<USER>@]<HOST>::<MODULE>/<BASE-DIR>/./[<SRC>]
        An rsync daemon source to be copied without the base directory.
    rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>[/[<SRC>]]
        An rsync daemon source to be copied.
    rsync://[<USER>@]<HOST>[:<PORT>]/<MODULE>/<BASE-DIR>/./[<SRC>]
        An rsync daemon source to be copied without the base directory.
    <DEST>
        A destination.

Files:
    ${dir}/conf/create-config
        An optional configuration file \
containing long option names (without leading slashes) and \
optional option arguments \
to be passed to rsync(1) \
when creating a new backup directory.
    ${dir}/conf/rsh
        An optional script \
to be used as a remote shell instead of the plain ssh(1). \
This script can be used for setting identity files and proxy commands, \
for instance.
    ${dir}/conf/rsync-config
        An optional configuration file \
used by ${basename%backup*}backup-rsync(1) \
used by ${basename%backup*}backup-copy-rsync(1) and ${basename}(1) \
containing long option names (without leading slashes) and \
optional option arguments \
to be passed to rsync(1).
    <SOURCE-DIRECTORY>/.backup-filter
        An optional per-directory rsync(1) filter merge-file \
which can be used for excluding files from backups. \
Empty lines and comment lines (starting with a "#") are allowed, too.

See also:
    ${basename%backup*}backup-create(1),
    ${basename%backup*}backup-rsync(1)

    rsync(1),
    ssh(1)

    Home page <https://github.Eero.Häkkinen.fi/rsync-backup/>
__HELP__
		;;
	--help=help2man )
		COLUMNS=2500 exec "${0}" --help \
		| exec sed \
			-e '/^See also:$/,/^[^ ]/{s/^\(See also\):$/*\1*/;s/^ *//;}' \
			-e '/^    [^ ]/!b'	\
			-e '/[^ ]  /b'		\
			-e 'N'			\
			-e 's/\n        -/  ​-/'	\
			-e 's/\n        /  /'	\
			-e 'P'			\
			-e 'D'
		exit
		;;
	--help=man )
		exec "${0}" --help=troff \
		| exec man -l -- -
		exit
		;;
	--help=troff )
		cat << '__TROFF__'
.if '\*[.T]'html' \{\
.HEAD "<link href=""groff.css"" rel=""stylesheet"" type=""text/css"" />"
.HEAD "<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />"
.HX 0
.\}
__TROFF__
		exec help2man -h --help=help2man -L en_US.UTF-8 -N -n "${short_description}" -- "${0}" \
		| exec sed \
			-e '\|^[.]B backup|,\|^[.]SH |{' \
			-e '\|^[^.]|s| |&\\%|g' \
			-e '\|^[^.]|s|^|&\\%|' \
			-e '\|^[.]br$|d' \
			-e 's|^[.]B backup|.SY backup|' \
			-e '\|^[.]SH |i\
.YS' \
			-e '}' \
			-e 's|\([[:alpha:]][[:alnum:]\\_-]*\)[(]\([[:digit:]]*\)[)]|\\fB\1\\fR(\2)|g' \
			-e 's|^\(.*\) <\(https://[^<[:space:]>]*\)>$|.UR \2\
\1\
.UE|'
		exit
		;;
	--help=* )
		exec "${0}" --help=troff \
		| exec man -l -T"${1#*=}" -- -
		exit
		;;
	--version | -V )
		exec sed -n \
			-e '/^[^#]/q'				\
			-e "3s/^# [^ ]* /# ${basename} /"	\
			-e 's/^#\( \(.*\)\)*$/\2/p'		\
			-e '/^##/{2!q;}'			\
			-- "${me}"
		;;
	esac
	break
done

# Parse an internal configuration name option.
config_name=create
case ${1-} in
--backup-config-name=* ) config_name=${1#*=}; shift ;;
esac

# Execute.
exec "${0%backup*}backup-rsync" --backup-config-name="${config_name}" "${@}"
