#! /bin/sh -Ceu
###########################################################################
# backup-prepare 0.0.20211113
#
# Copyright (C) 2010-2021 Eero Häkkinen <Eero+rsync-backup@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
# Try to be nice.
{
	ionice -c 3  -p "${$}"
	renice -n 99 -p "${$}"
} > /dev/null 2>&1 || :

# Locate the script.
me=$( command -v -- "${0}" || ls -d -- "${0}" )
me_dir=$( dirname -- "${me}" )
case ${me_dir} in
.  ) dir=.. ;;
.. ) dir=../.. ;;
*. ) dir=$( cd -- "${me_dir}/.." && pwd ) ;;
*  ) dir=$( dirname -- "${me_dir}" ) ;;
esac

basename=${0##*[\\/]}
short_description='prepare for backups'
valid=[:alnum:]_.-


# Parse options.
while :
do
	case ${1-} in
	--help | -h )
		COLUMNS=${COLUMNS:-$( tput cols 2> /dev/null || : )}
		exec fmt -s ${COLUMNS:+ -w "${COLUMNS}" } << __HELP__ \
		| exec sed -e '/\\$/{N;s/\\\n  *//;}'; exit
Usage: \\
           ${basename} [<OPTION>]...

Prepare for backups \by executing preparation scripts. \
This can be used for dumping database snapshots to files, for instance.

Preparation is done \
with idle I/O priority (whose impact on normal system activity should be zero), \
with an adjusted niceness (which affect process scheduling) and \
with minimized effect on file system cache \
provided that the commands ionice(1), nice(1) and nocache(1) are available. \
For details, see \
${basename%backup*}backup-nice(1).

Options:
    -h, --help[=<FORMAT>]
        Show this help message and exit.
    -V, --version
        Show version information and exit.

Files:
    ${dir}/conf/dump-config
        An optional configuration file \
used by some ${dir}/conf/pre.d/*-dump scripts \
containing configuration variable assignments.
    ${dir}/conf/pre.d/
        An optional directory containing scripts \
which are executed in lexical order of names. \
The names of the files must consist of only characters \
matching the pattern [${valid}].

See also:
    ${basename%backup*}backup(1),
    ${basename%backup*}backup-nice(1),
    ${basename%backup*}backup-rsync(1)

    ionice(1),
    nice(1),
    nocache(1)

    Home page <https://github.Eero.Häkkinen.fi/rsync-backup/>
__HELP__
		;;
	--help=help2man )
		COLUMNS=2500 exec "${0}" --help \
		| exec sed \
			-e '/^See also:$/,/^[^ ]/{s/^\(See also\):$/*\1*/;s/^ *//;}' \
			-e '/^    [^ ]/!b'	\
			-e '/[^ ]  /b'		\
			-e 'N'			\
			-e 's/\n        -/  ​-/'	\
			-e 's/\n        /  /'	\
			-e 'P'			\
			-e 'D'
		exit
		;;
	--help=man )
		exec "${0}" --help=troff \
		| exec man -l -- -
		exit
		;;
	--help=troff )
		cat << '__TROFF__'
.if '\*[.T]'html' \{\
.HEAD "<link href=""groff.css"" rel=""stylesheet"" type=""text/css"" />"
.HEAD "<meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />"
.HX 0
.\}
__TROFF__
		exec help2man -h --help=help2man -L en_US.UTF-8 -N -n "${short_description}" -- "${0}" \
		| exec sed \
			-e '\|^[.]B backup|,\|^[.]SH |{' \
			-e '\|^[^.]|s| |&\\%|g' \
			-e '\|^[^.]|s|^|&\\%|' \
			-e '\|^[.]br$|d' \
			-e 's|^[.]B backup|.SY backup|' \
			-e '\|^[.]SH |i\
.YS' \
			-e '}' \
			-e 's|\([[:alpha:]][[:alnum:]\\_-]*\)[(]\([[:digit:]]*\)[)]|\\fB\1\\fR(\2)|g' \
			-e 's|^\(.*\) <\(https://[^<[:space:]>]*\)>$|.UR \2\
\1\
.UE|'
		exit
		;;
	--help=* )
		exec "${0}" --help=troff \
		| exec man -l -T"${1#*=}" -- -
		exit
		;;
	--version | -V )
		exec sed -n \
			-e '/^[^#]/q'				\
			-e "3s/^# [^ ]* /# ${basename} /"	\
			-e 's/^#\( \(.*\)\)*$/\2/p'		\
			-e '/^##/{2!q;}'			\
			-- "${me}"
		;;
	--  ) shift; break ;;
	-?* ) getopts '' OPT "${@}"; exit 1 ;;
	*   ) break ;;
	esac
done

# Parse operands.
case ${#} in
0 ) ;;
* ) "${0}" --help >&2; exit 1 ;;
esac

# Prepare for backup.
unset FQDN
for file in "${dir}"/conf/pre.d/*
do
	case ${file##*/} in
	*[!${valid}]* ) continue ;;
	esac
	"${0%backup*}backup-nice" -- "${file}" || {
		error=${?}
		FQDN=${FQDN-$(
			hostname -f 2> /dev/null ||
			hostname    2> /dev/null ||
			uname -n
			)}
		USER=${USER-$( id -un )}
		echo "${USER}@${FQDN}:${file}: ${error}" >&2
	}
done
