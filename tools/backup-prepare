#! /bin/sh -Ceu
###########################################################################
# backup-prepare 0.0.20211029
#
# Copyright (C) 2010-2021 Eero Häkkinen <Eero+rsync-backup@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
# Try to be nice.
{
	ionice -c 3  -p "${$}"
	renice -n 99 -p "${$}"
} > /dev/null 2>&1 || :

# Locate the script.
me=$( which -- "${0}" || ls -d -- "${0}" )
dir=$( dirname -- "${me}" )
case ${dir} in
. ) dir=.. ;;
* ) dir=$( dirname -- "${dir}" ) ;;
esac

basename=${0##*[\\/]}
short_description='prepare for backups'
valid=[:alnum:]_.-


# Parse options.
while :
do
	case ${1-} in
	--help | -h ) exec fmt -s -w "${COLUMNS:-$( tput cols )}" << __HELP__
Usage: ${basename} [<OPTION>]...

Prepare for backups by executing preparation scripts. \
This can be used for dumping database snapshots to files, for instance.

Options:
    -h, --help[=<FORMAT>]
        Show this help message and exit.
    -V, --version
        Show version information and exit.

Files:
    ${dir}/conf/dump-config
        An optional configuration file \
used by some ${dir}/conf/pre.d/*-dump scripts \
containing configuration variable assignments.
    ${dir}/conf/pre.d/
        An optional directory containing scripts \
which are executed in lexical order of names. \
The names of the files must consist of only characters \
matching the pattern [${valid}].
__HELP__
		;;
	--help=help2man )
		COLUMNS=2500 exec "${0}" --help \
		| exec sed \
			-e '/^    [^ ]/!b'	\
			-e '/[^ ]  /b'		\
			-e 'N'			\
			-e 's/\n        /  /'	\
			-e 'P'			\
			-e 'D'
		exit
		;;
	--help=man )
		exec "${0}" --help=troff \
		| exec man -l -- -
		exit
		;;
	--help=troff )
		exec help2man -h --help=help2man -L en_US.UTF-8 -N -n "${short_description}" -- "${0}" \
		| exec sed -e 's/\([[:alnum:]\\-][[:alnum:]\\-]*\)[(]\([[:digit:]]*\)[)]/\\fB\1\\fR(\2)/g'
		exit
		;;
	--version | -V )
		exec sed -n \
			-e '/^[^#]/q'				\
			-e "3s/^# [^ ]* /# ${basename} /"	\
			-e 's/^#\( \(.*\)\)*$/\2/p'		\
			-e '/^##/{2!q;}'			\
			-- "${me}"
		;;
	--  ) shift; break ;;
	-?* ) getopts '' OPT "${@}"; exit 1 ;;
	*   ) break ;;
	esac
done

# Parse operands.
case ${#} in
0 ) ;;
* ) "${0}" --help >&2; exit 1 ;;
esac

# Prepare for backup.
unset FQDN
for file in "${dir}"/conf/pre.d/*
do
	case ${file##*/} in
	*[!${valid}]* ) continue ;;
	esac
	"${file}" || {
		error=${?}
		FQDN=${FQDN-$( hostname -f 2> /dev/null || hostname )}
		USER=${USER-$( id -un )}
		echo "${USER}@${FQDN}:${file}: ${error}" >&2
	}
done
