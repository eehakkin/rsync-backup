#! /bin/sh -Ceu
# backup-clean-tmp - clean up a temporary directory
###########################################################################
# backup-clean-tmp 0.0.20240811
#
# Copyright (C) 2010 - 2024 Eero Häkkinen <Eero+rsync-backup@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
# Try to be nice.
{
	ionice -c 3  -p "${$}"
	renice -n 99 -p "${$}"
} > /dev/null 2>&1 || :

# Locate the script.
me=$( command -v -- "${0}" || ls -d -- "${0}" )
me_base=$( basename -- "${me}" )
me_dir=$( dirname -- "${me}" )
case ${me_dir} in
.  ) dir=.. ;;
.. ) dir=../.. ;;
*. ) dir=$( cd -- "${me_dir}/.." && pwd ) ;;
*  ) dir=$( dirname -- "${me_dir}" ) ;;
esac


dry_run=''

# Parse options.
while :
do
	case ${1-} in
	--help | -h )
		COLUMNS=${COLUMNS:-$( tput cols 2> /dev/null || : )}
		exec fmt -s ${COLUMNS:+ -w "${COLUMNS}" } << __HELP__ \
		| exec sed -e '/\\$/{N;s/\\\n  *//;}'; exit
Usage: \\
           ${me_base} [<OPTION>]... [<BASE-PREFIX>]...

Remove stale subdirectories from a temporary directory.

Options:
    -n, --dry-run
        Perform a trial run with no changes made.
    -h, --help[=<FORMAT>]
        Show this help message and exit.
    -V, --version
        Show version information and exit.

Operands:
    <BASE-PREFIX>
        A subdirectory basename prefix. \
Subdirectories \
within the temporary directory \
having this basename prefix \
are removed unconditionally.

Files:
    ${dir}/tmp/
        A temporary directory.
    ${dir}/tmp/<BASE-PREFIX>-<ANYTHING>/
        A subdirectory to be removed unconditionally.
    ${dir}/tmp/<OTHER-BASE-PREFIX>-<ANYTHING>/
        A subdirectory to be removed if not used for awhile.

See also:
    ${me_base%backup*}backup-copy(1),
    ${me_base%backup*}backup-create(1),
    ${me_base%backup*}backup-help(1),
    ${me_base%backup*}backup-purge(1),
    ${me_base%backup*}backup-rsync(1)

    Home page <https://github.Eero.Häkkinen.fi/rsync-backup/>
__HELP__
		;;
	--help=* | --version | -V )
		export BACKUP_TOOL="${0}"
		exec "${0%backup*}backup-help" "${1}"
		;;
	--dry-run | -n )
		dry_run=+
		shift
		;;
	-[!-][!-]* )
		opts=${1#-}
		shift
		set -- "-${opts%"${opts#?}"}" "-${opts#?}" "${@}"
		;;
	--  ) shift; break ;;
	-?* ) "getopts${-##*}" '' OPT "${@}"; exit 1 ;;
	*   ) break ;;
	esac
done

if [ ! -d "${dir}/tmp" ]
then
	# Create the missing temporary directory.
	exec ${dry_run:+echo} mkdir -m go=u-w -p -- "${dir}/tmp"
else
	# Determine the preferred remove method.
	fstype=$(
		exec find "${dir}/." -prune -printf '%F\n' 2> /dev/null
		) || :
	case ${fstype} in
	fuse.s3ql ) rm_fr=s3qlrm ;;
	*         ) rm_fr='rm -fr' ;;
	esac

	# Construct a basename prefix for a temporary old subdirectory.
	old_base_prefix=old
	for base_prefix
	do
		old_base_prefix=old-${base_prefix}
		break
	done

	# Remove existing temporary old subdirectories unconditionally.
	case ${old_base_prefix} in
	old-*-* ) valid='[:digit:]' ;;
	*       ) unset valid ;;
	esac
	# shellcheck disable=SC2086
	find \
		"${dir}/tmp/." \
		! -name . \
		-prune \
		-name "${old_base_prefix}-${valid+[${valid}]}*" \
		${valid+ ! -name "${old_base_prefix}-*[!${valid}]*" } \
		-exec ${dry_run:+echo} ${rm_fr} -- {} + || :

	# Find the stale temporary subdirectories (and files).
	# If the name of a temporary subdirectory starts with one of
	# the basename prefixes, remove the subdirectory unconditionally.
	# Otherwise, remove the subdirectory only if it has not been
	# changed or modified for awhile.
	# Use the following steps for removals:
	#  1) Create a new temporary old subdirectory.
	#  2) Move the stale temporary subdirectories to the newly
	#     created temporary old subdirectory.
	#  3) Remove the newly created temporary old subdirectory.
	# This ensures atomicity (moving is atomic while removing is not).
	for base_prefix
	do
		# If the basename prefix is for instance "copy-<YEAR>-<MONTH>",
		# find only "copy-<YEAR>-<MONTH>-<PID>" but not
		# "copy-<YEAR>-<MONTH>-<DAY>-<PID>".
		# But if the basename prefix is for instance "copy",
		# find not only "copy-<PID>" but also "copy-<TAG>-<PID>".
		case ${base_prefix} in
		*-* ) valid='[:digit:]' ;;
		*   ) unset valid ;;
		esac
		set -- \
			"${@}" \
			-name "${base_prefix}-${valid+[${valid}]}*" \
			${valid+ ! -name "${base_prefix}-*[!${valid}]*" } \
			-o
		shift
	done
	# [-name '<BASE-PREFIX>-*' -o]... -ctime +0 -mtime +0
	set -- "${@}" -ctime +0 -mtime +0
	tmp_old="${dir}/tmp/${old_base_prefix}-${$}" exec find \
		"${dir}/tmp/." \
		! -name . \
		-prune \
		! -name "${old_base_prefix}-*" \
		\( "${@}" \) \
		-exec /bin/sh -Cceu "
${dry_run:+echo }mkdir -m go=u-w -- \"\${tmp_old}\" &&
${dry_run:+echo }mv -f -- \"\${@}\" \"\${tmp_old}\"/ &&
${dry_run:+echo }${rm_fr} -- \"\${tmp_old}\"" sh {} +
fi
