#! /bin/sh -Ceu
# backup-purge - delete old backup directories
###########################################################################
# backup-purge 0.0.20240811
#
# Copyright (C) 2010 - 2024 Eero Häkkinen <Eero+rsync-backup@Häkkinen.fi>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################
# Try to be nice.
{
	ionice -c 3  -p "${$}"
	renice -n 99 -p "${$}"
} > /dev/null 2>&1 || :

# Locate the script.
me=$( command -v -- "${0}" || ls -d -- "${0}" )
me_base=$( basename -- "${me}" )
me_dir=$( dirname -- "${me}" )
case ${me_dir} in
.  ) dir=.. ;;
.. ) dir=../.. ;;
*. ) dir=$( cd -- "${me_dir}/.." && pwd ) ;;
*  ) dir=$( dirname -- "${me_dir}" ) ;;
esac

default_args='hourly=0 fake-daily=0 daily=7 fake-weekly=7 weekly=31 fake-monthly=31 monthly=366 fake-yearly=366'
dry_run='' force=''

# Parse options.
while :
do
	case ${1-} in
	--help | -h )
		COLUMNS=${COLUMNS:-$( tput cols 2> /dev/null || : )}
		exec fmt -s ${COLUMNS:+ -w "${COLUMNS}" } << __HELP__ \
		| exec sed -e '/\\$/{N;s/\\\n  *//;}'; exit
Usage: \\
           ${me_base} [<OPTION>]... [<PATTERN>=<DAYS>]...

Delete old backup directories \
based on pattern matching and ages. \
The default is to keep \
secondly, minutely, hourly and fake daily backup directories for at most one day, \
daily and fake weekly backup directories for at least one week, \
weekly and fake monthly backup directories for at least one month, \
monthly and fake yearly backup directories for at least one year and \
yearly backup directories forever \
(thus the default operands are ${default_args}).

Options:
    -f, --force
        Purge even while on battery power.
    -n, --dry-run
        Perform a trial run with no changes made.
    -h, --help[=<FORMAT>]
        Show this help message and exit.
    -V, --version
        Show version information and exit.

Operands:
    <PATTERN>=<DAYS>
        Backup directories matching <PATTERN> are deleted \
if they are over <DAYS> days old.

Special patterns:
    yearly
        Matches yearly backup directories.
        This corresponds the following pattern:
            [0-9][0-9][0-9][0-9]
        (for <YEAR>).
    monthly
        Matches monthly backup directories.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9][0-9][0-9]
            [0-9][0-9][0-9][0-9]-[0-9][0-9]
        (for <YEAR>[-]<MONTH>).
    weekly
        Matches weekly backup directories.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9]W[0-9][0-9]
            [0-9][0-9][0-9][0-9]-W[0-9][0-9]
        (for <YEAR>[-]W<WEEK>).
    daily
        Matches daily backup directories.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]
            [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]
            [0-9][0-9][0-9][0-9]W[0-9][0-9][0-9]
            [0-9][0-9][0-9][0-9]-W[0-9][0-9]-[0-9]
        (for <YEAR>[-]<MONTH>[-]<DAY> and <YEAR>[-]W<WEEK>[-]<DAY>).
    hourly
        Matches hourly, minutely and secondly backup directories.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]T[0-9][0-9]*
            [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]*
            [0-9][0-9][0-9][0-9]W[0-9][0-9][0-9]T[0-9][0-9]*
            [0-9][0-9][0-9][0-9]-W[0-9][0-9]-[0-9]T[0-9][0-9]*
        (for
        <YEAR>[-]<MONTH>[-]<DAY>T<HOUR>[[:]<MINUTE>[[:]<SECOND>]] and
        <YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>[[:]<MINUTE>[[:]<SECOND>]]).
    fake-yearly
        Matches yearly backup directories if the year is 9999.
        This corresponds the pattern 9999.
    fake-monthly
        Matches monthly backup directories if the month is 99.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9]99
            [0-9][0-9][0-9][0-9]-99
        (for <YEAR>[-]99).
    fake-weekly
        Matches weekly backup directories if the week is 99.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9]W99
            [0-9][0-9][0-9][0-9]-W99
        (for <YEAR>[-]W99).
    fake-daily
        Matches daily backup directories \
if the day of a month is 99 or the day of a week is 9.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9][0-9][0-9]99
            [0-9][0-9][0-9][0-9]-[0-9][0-9]-99
            [0-9][0-9][0-9][0-9]W[0-9][0-9]9
            [0-9][0-9][0-9][0-9]-W[0-9][0-9]-9
        (for <YEAR>[-]<MONTH>[-]99 and <YEAR>[-]W<WEEK>[-]9).
    fake-hourly
        Matches hourly, minutely and secondly backup directories \
if the hour is 99.
        This corresponds the following patterns:
            [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]T99*
            [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T99*
            [0-9][0-9][0-9][0-9]W[0-9][0-9][0-9]T99*
            [0-9][0-9][0-9][0-9]-W[0-9][0-9]-[0-9]T99*
        (for
        <YEAR>[-]<MONTH>[-]<DAY>T99[[:]<MINUTE>[[:]<SECOND>]] and
        <YEAR>[-]W<WEEK>[-]<DAY>T99[[:]<MINUTE>[[:]<SECOND>]]).

Files:
    ${dir}/<YEAR>
        A yearly backup directory.
    ${dir}/<YEAR>[-]<MONTH>
        A monthly backup directory.
    ${dir}/<YEAR>[-]W<WEEK>
        A weekly backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>
        A daily backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>
        A daily backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>T<HOUR>
        An hourly backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>
        An hourly backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>T<HOUR>[:]<MINUTE>
        A minutely backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>[:]<MINUTE>
        A minutely backup directory.
    ${dir}/<YEAR>[-]<MONTH>[-]<DAY>T<HOUR>[:]<MINUTE>[:]<SECOND>
        A secondly backup directory.
    ${dir}/<YEAR>[-]W<WEEK>[-]<DAY>T<HOUR>[:]<MINUTE>[:]<SECOND>
        A secondly backup directory.
    ${dir}/conf/purge-list
        An optional configuration file \
containing patterns and ages \
which override the default ones. \
The file must contain operand lines having the following form:
            <PATTERN>=<DAYS>
        Empty lines and comment lines (starting with a "#") are allowed, too. \
Backup directories matching <PATTERN> are deleted \
if they are over <DAYS> days old.
    ${dir}/tmp/
        A temporary directory to be used for deleting old backup directories.

See also:
    ${me_base%backup*}backup(1),
    ${me_base%backup*}backup-help(1),
    ${me_base%backup*}backup-mirror(1)

    on_ac_power(1)

    Home page <https://github.Eero.Häkkinen.fi/rsync-backup/>
__HELP__
		;;
	--help=* | --version | -V )
		export BACKUP_TOOL="${0}"
		exec "${0%backup*}backup-help" "${1}"
		;;
	--dry-run | -n )
		dry_run=+
		shift
		;;
	--force | -f )
		force=+
		shift
		;;
	-[!-][!-]* )
		opts=${1#-}
		shift
		set -- "-${opts%"${opts#?}"}" "-${opts#?}" "${@}"
		;;
	--  ) shift; break ;;
	-?* ) "getopts${-##*}" '' OPT "${@}"; exit 1 ;;
	*   ) break ;;
	esac
done

# Parse operands.
case ${#} in
0 )
	if [ -f "${dir}/conf/purge-list" ]
	then
		set --
		while read -r arg
		do
			case ${arg} in
			'' | '#'* ) continue ;;
			esac
			set -- "${@}" "${arg}"
		done < "${dir}/conf/purge-list"
	else
		# shellcheck disable=SC2086
		set -- ${default_args}
	fi
	case ${#} in
	0 ) exit ;;
	esac
	;;
esac

digit='[[:digit:]]'
day=${digit}${digit}
hour=${digit}${digit}
month=${digit}${digit}
week=${digit}${digit}
year=${digit}${digit}${digit}${digit}
for arg
do
	case ${arg%=*} in
	yearly       ) set -- "${@}" -o -name "${year}" -mtime +"${arg##*=}" ;;
	fake-yearly  ) set -- "${@}" -o -name "9999" -mtime +"${arg##*=}" ;;
	monthly      ) set -- "${@}" -o \( \
		-name "${year}${month}" -o \
		-name "${year}-${month}" \
		\) -mtime +"${arg##*=}" ;;
	fake-monthly ) set -- "${@}" -o \( \
		-name "${year}99" -o \
		-name "${year}-99" \
		\) -mtime +"${arg##*=}" ;;
	weekly       ) set -- "${@}" -o \( \
		-name "${year}W${week}" -o \
		-name "${year}-W${week}" \
		\) -mtime +"${arg##*=}" ;;
	fake-weekly  ) set -- "${@}" -o \( \
		-name "${year}W99" -o \
		-name "${year}-W99" \
		\) -mtime +"${arg##*=}" ;;
	daily        ) set -- "${@}" -o \( \
		-name "${year}${month}${day}" -o \
		-name "${year}-${month}-${day}" -o \
		-name "${year}W${week}${digit}" -o \
		-name "${year}-W${week}-${digit}" \
		\) -mtime +"${arg##*=}" ;;
	fake-daily   ) set -- "${@}" -o \( \
		-name "${year}${month}99" -o \
		-name "${year}-${month}-99" -o \
		-name "${year}W${week}9" -o \
		-name "${year}-W${week}-9" \
		\) -mtime +"${arg##*=}" ;;
	hourly       ) set -- "${@}" -o \( \
		-name "${year}${month}${day}T${hour}*" -o \
		-name "${year}-${month}-${day}T${hour}*" -o \
		-name "${year}W${week}${digit}T${hour}*" -o \
		-name "${year}-W${week}-${digit}T${hour}*" \
		\) -mtime +"${arg##*=}" ;;
	fake-hourly  ) set -- "${@}" -o \( \
		-name "${year}${month}${day}T99*" -o \
		-name "${year}-${month}-${day}T99*" -o \
		-name "${year}W${week}${digit}T99*" -o \
		-name "${year}-W${week}-${digit}T99*" \
		\) -mtime +"${arg##*=}" ;;
	*            ) set -- "${@}" -o -name "${digit}*" -name "${arg%=*}" -mtime +"${arg##*=}" ;;
	esac
	shift
done
shift # -o

${force:+:} on_ac_power > /dev/null 2>&1 && :
case ${?} in
1 ) echo "${0}: deferred while on battery power." >&2; dry_run=+ ;;
esac

# Clean up temporary directories.
"${0%backup*}backup-clean-tmp" ${dry_run:+ --dry-run } -- purge

# Determine the preferred remove method.
fstype=$(
	exec find "${dir}/." -prune -printf '%F\n' 2> /dev/null
	) || :
case ${fstype} in
fuse.s3ql ) rm_fr=s3qlrm ;;
*         ) rm_fr='rm -fr' ;;
esac

# Find the old backup directories and remove them.
# Use the following steps for removals:
#  1) Create a new temporary purge subdirectory.
#  2) Move the old backup directories to the newly created temporary
#     purge subdirectory.
#  3) Remove the newly created temporary purge subdirectory.
# This ensures atomicity (moving is atomic while removing is not).
tmp_purge="${dir}/tmp/purge-${$}" exec find \
	"${dir}/." \
	! -name . \
	-prune \
	\( "${@}" \) \
	-exec /bin/sh -Cceu "
${dry_run:+echo }mkdir -m go=u-w -- \"\${tmp_purge}\" &&
${dry_run:+echo }mv -f -- \"\${@}\" \"\${tmp_purge}\"/ &&
${dry_run:+echo }${rm_fr} -- \"\${tmp_purge}\"" sh {} +
